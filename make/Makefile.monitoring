# Monitoring Stack Makefile
# Handles Alloy, Prometheus, Grafana, and observability components

.PHONY: deploy-monitoring install-alloy uninstall-alloy reinstall-alloy wait-monitoring check-monitoring

# Colors for output
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[0;33m
BLUE := \033[0;34m
NC := \033[0m # No Color

# =============================================================================
# Main Monitoring Deployment
# =============================================================================

deploy-monitoring: install-alloy deploy-monitoring-stack
	@echo "$(GREEN)‚úÖ Monitoring deployed!$(NC)"

deploy-monitoring-stack:
	@echo "$(BLUE)üìä Deploying monitoring stack...$(NC)"
	@kubectl apply -k kubernetes-manifests/monitoring

# =============================================================================
# Alloy (Observability Pipeline)
# =============================================================================

install-alloy:
	@echo "$(BLUE)üöÄ Installing Grafana Alloy...$(NC)"
	@helm repo add grafana https://grafana.github.io/helm-charts 2>/dev/null || true
	@helm repo update
	@helm upgrade --install alloy grafana/alloy \
		--namespace monitoring \
		--create-namespace \
		--wait \
		--timeout 300s \
		-f kubernetes-manifests/monitoring/helm/values-alloy.yaml
	@echo "$(YELLOW)‚è≥ Waiting for Alloy to be ready...$(NC)"
	@kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=alloy -n monitoring --timeout=300s
	@echo "$(GREEN)‚úÖ Alloy installed successfully!$(NC)"

uninstall-alloy:
	@echo "$(RED)üóëÔ∏è  Uninstalling Alloy...$(NC)"
	@helm uninstall alloy -n monitoring 2>/dev/null || true
	@kubectl delete namespace monitoring --ignore-not-found=true
	@echo "$(YELLOW)‚è≥ Waiting for cleanup...$(NC)"
	@sleep 10
	@echo "$(GREEN)‚úÖ Alloy uninstalled!$(NC)"

reinstall-alloy: uninstall-alloy install-alloy

check-alloy:
	@echo "$(BLUE)üìã Checking Alloy status...$(NC)"
	@helm status alloy -n monitoring 2>/dev/null || echo "$(YELLOW)Alloy not installed$(NC)"
	@kubectl get pods -n monitoring -l app.kubernetes.io/name=alloy || echo "$(YELLOW)Alloy pods not found$(NC)"

# =============================================================================
# Monitoring Stack Components
# =============================================================================

wait-monitoring:
	@echo "$(YELLOW)‚è≥ Waiting for monitoring components to be ready...$(NC)"
	@kubectl wait --for=condition=ready pod -l app=prometheus -n monitoring --timeout=300s || echo "$(YELLOW)‚ö†Ô∏è  Prometheus not ready yet$(NC)"
	@kubectl wait --for=condition=ready pod -l app=grafana -n monitoring --timeout=300s || echo "$(YELLOW)‚ö†Ô∏è  Grafana not ready yet$(NC)"
	@kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=alloy -n monitoring --timeout=300s || echo "$(YELLOW)‚ö†Ô∏è  Alloy not ready yet$(NC)"

check-monitoring:
	@echo "$(BLUE)üìã Checking monitoring stack...$(NC)"
	@echo "$(GREEN)Prometheus:$(NC)"
	@kubectl get pods -n monitoring -l app=prometheus || echo "$(YELLOW)Prometheus not found$(NC)"
	@echo "$(GREEN)Grafana:$(NC)"
	@kubectl get pods -n monitoring -l app=grafana || echo "$(YELLOW)Grafana not found$(NC)"
	@echo "$(GREEN)Alloy:$(NC)"
	@kubectl get pods -n monitoring -l app.kubernetes.io/name=alloy || echo "$(YELLOW)Alloy not found$(NC)"

# =============================================================================
# Monitoring Configuration
# =============================================================================

update-prometheus-config:
	@echo "$(BLUE)üîß Updating Prometheus configuration...$(NC)"
	@kubectl rollout restart deployment/prometheus -n monitoring || true
	@echo "$(GREEN)‚úÖ Prometheus configuration updated!$(NC)"

update-grafana-config:
	@echo "$(BLUE)üîß Updating Grafana configuration...$(NC)"
	@kubectl rollout restart deployment/grafana -n monitoring || true
	@echo "$(GREEN)‚úÖ Grafana configuration updated!$(NC)"

update-alloy-config:
	@echo "$(BLUE)üîß Updating Alloy configuration...$(NC)"
	@helm upgrade alloy grafana/alloy \
		--namespace monitoring \
		--reuse-values \
		-f kubernetes-manifests/monitoring/helm/values-alloy.yaml
	@echo "$(GREEN)‚úÖ Alloy configuration updated!$(NC)"

# =============================================================================
# Monitoring Access and Troubleshooting
# =============================================================================

port-forward-monitoring:
	@echo "$(BLUE)üîÄ Setting up monitoring port forwarding...$(NC)"
	@kubectl port-forward -n monitoring svc/prometheus 9090:9090 > /dev/null 2>&1 & \
	kubectl port-forward -n monitoring svc/grafana 3000:3000 > /dev/null 2>&1 & \
	sleep 2
	@echo "$(GREEN)‚úÖ Monitoring port forwarding ready!$(NC)"
	@echo "$(GREEN)   üìà Prometheus: http://localhost:9090$(NC)"
	@echo "$(GREEN)   üìä Grafana:    http://localhost:3000 (admin/admin)$(NC)"

logs-prometheus:
	@echo "$(BLUE)üìú Recent Prometheus logs...$(NC)"
	@kubectl logs deployment/prometheus -n monitoring --tail=20

logs-grafana:
	@echo "$(BLUE)üìú Recent Grafana logs...$(NC)"
	@kubectl logs deployment/grafana -n monitoring --tail=20

logs-alloy:
	@echo "$(BLUE)üìú Recent Alloy logs...$(NC)"
	@kubectl logs -l app.kubernetes.io/name=alloy -n monitoring --tail=20

# =============================================================================
# Monitoring Metrics and Health
# =============================================================================

check-prometheus-targets:
	@echo "$(BLUE)üìä Checking Prometheus targets...$(NC)"
	@curl -s http://localhost:9090/api/v1/targets 2>/dev/null | jq '.data.activeTargets[] | {job: .labels.job, health: .health, lastError: .lastError}' 2>/dev/null || echo "$(YELLOW)Prometheus not accessible on localhost:9090$(NC)"

check-grafana-datasources:
	@echo "$(BLUE)üìä Checking Grafana datasources...$(NC)"
	@curl -s -u admin:admin http://localhost:3000/api/datasources 2>/dev/null | jq '.[].name' 2>/dev/null || echo "$(YELLOW)Grafana not accessible on localhost:3000$(NC)"

test-metrics-collection:
	@echo "$(BLUE)üß™ Testing metrics collection...$(NC)"
	@curl -s http://localhost:9090/api/v1/query?query=up 2>/dev/null | jq '.data.result[] | {instance: .metric.instance, value: .value[1]}' 2>/dev/null || echo "$(YELLOW)Cannot query Prometheus metrics$(NC)"

# =============================================================================
# Monitoring Cleanup
# =============================================================================

clean-monitoring:
	@echo "$(RED)üóëÔ∏è  Cleaning monitoring stack...$(NC)"
	@kubectl delete -k kubernetes-manifests/monitoring --ignore-not-found=true
	@echo "$(GREEN)‚úÖ Monitoring stack cleaned!$(NC)"

clean-monitoring-namespace:
	@echo "$(RED)üóëÔ∏è  Cleaning monitoring namespace...$(NC)"
	@kubectl delete namespace monitoring --ignore-not-found=true
	@echo "$(GREEN)‚úÖ Monitoring namespace cleaned!$(NC)"

# =============================================================================
# Monitoring Development Helpers
# =============================================================================

restart-monitoring:
	@echo "$(BLUE)üîÑ Restarting monitoring components...$(NC)"
	@kubectl rollout restart deployment/prometheus -n monitoring || true
	@kubectl rollout restart deployment/grafana -n monitoring || true
	@kubectl rollout restart daemonset/alloy -n monitoring || true
	@echo "$(GREEN)‚úÖ Monitoring components restarted!$(NC)"

monitoring-status:
	@echo "$(BLUE)üìä Monitoring Stack Status$(NC)"
	@echo ""
	@echo "$(GREEN)Helm Releases:$(NC)"
	@helm list -n monitoring 2>/dev/null || echo "$(YELLOW)No Helm releases in monitoring namespace$(NC)"
	@echo ""
	@echo "$(GREEN)Pods:$(NC)"
	@kubectl get pods -n monitoring 2>/dev/null || echo "$(YELLOW)Monitoring namespace not found$(NC)"
	@echo ""
	@echo "$(GREEN)Services:$(NC)"
	@kubectl get svc -n monitoring 2>/dev/null || echo "$(YELLOW)No services in monitoring namespace$(NC)"

# =============================================================================
# Monitoring Configuration Validation
# =============================================================================

validate-monitoring-config:
	@echo "$(BLUE)‚úÖ Validating monitoring configuration...$(NC)"
	@echo "$(GREEN)Checking Alloy config...$(NC)"
	@kubectl get configmap alloy -n monitoring -o yaml 2>/dev/null | grep -q "prometheus.scrape" && echo "$(GREEN)‚úÖ Alloy scrape config found$(NC)" || echo "$(YELLOW)‚ö†Ô∏è  Alloy scrape config not found$(NC)"
	@echo "$(GREEN)Checking Prometheus config...$(NC)"
	@kubectl get configmap prometheus-config -n monitoring 2>/dev/null && echo "$(GREEN)‚úÖ Prometheus config found$(NC)" || echo "$(YELLOW)‚ö†Ô∏è  Prometheus config not found$(NC)"
	@echo "$(GREEN)Checking Grafana config...$(NC)"
	@kubectl get configmap grafana-config -n monitoring 2>/dev/null && echo "$(GREEN)‚úÖ Grafana config found$(NC)" || echo "$(YELLOW)‚ö†Ô∏è  Grafana config not found$(NC)"
