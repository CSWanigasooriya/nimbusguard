# MCP (Model Context Protocol) Server Configuration for NimbusGuard
# This configures the available MCP servers for cluster interaction

mcp_servers:
  # Kubernetes MCP Server - for cluster state observation and actions
  kubernetes:
    command: "npx"
    args: 
      - "mcp-server-kubernetes"
    description: "Kubernetes cluster interaction via MCP"
    capabilities:
      - "list_pods"
      - "get_deployment" 
      - "scale_deployment"
      - "get_metrics"
      - "list_services"
    timeout: 30

  # Prometheus MCP Server - for metrics collection
  prometheus:
    command: "npx"
    args:
      - "mcp-server-prometheus"
    description: "Prometheus metrics collection via MCP"
    capabilities:
      - "query_metrics"
      - "get_targets"
      - "get_alerts"
    timeout: 15
    config:
      prometheus_url: "http://prometheus:9090"

# MCP Client Configuration
mcp_client:
  max_connections: 10
  connection_timeout: 30
  retry_attempts: 3
  retry_delay: 5

# Tool Selection for Different Agents
agent_tools:
  state_observer:
    - "kubernetes"
    - "prometheus"
  
  decision_agent:
    - "kubernetes"
    - "prometheus"
  
  action_executor:
    - "kubernetes"
  
  reward_calculator:
    - "kubernetes"
    - "prometheus"

# Default MCP Settings
defaults:
  enable_mcp: true
  fallback_mode: true  # Use direct Kubernetes API if MCP fails
  log_mcp_calls: true 